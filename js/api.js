// ================================
// üåê API central do backend (Render)
// ================================
const API_BASE_URL = "https://dina-backend.onrender.com"; // URL do backend no Render

// =================================
// üîê Fun√ß√£o para pegar o token JWT
// =================================
function getToken() {
    return localStorage.getItem("token");
}

// =================================
// üì° GET - Buscar Configura√ß√µes
// =================================
async function getConfig() {
    const token = getToken();

    const response = await fetch(`${API_BASE_URL}/config`, {
        method: "GET",
        headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json"
        }
    });

    if (!response.ok) throw new Error("Erro ao buscar configura√ß√µes");
    return await response.json();
}

// =================================
// üì° POST - Salvar Configura√ß√µes
// =================================
async function saveConfig(configData) {
    const token = getToken();

    const response = await fetch(`${API_BASE_URL}/config`, {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json"
        },
        body: JSON.stringify(configData)
    });

    if (!response.ok) throw new Error("Erro ao salvar configura√ß√µes");
    return await response.json();
}

// =================================
// üöÄ POST - Rodar Rob√¥ (execu√ß√£o √∫nica)
// =================================
async function runBot() {
    const token = getToken();

    const response = await fetch(`${API_BASE_URL}/rodar`, {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json"
        }
    });

    if (!response.ok) throw new Error("Erro ao executar rob√¥");
    return await response.json();
}

// =================================
// üöÄ POST - Iniciar execu√ß√£o cont√≠nua
// =================================
async function startContinuousExecution() {
    const token = getToken();

    const response = await fetch(`${API_BASE_URL}/executar_continuo`, {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json"
        }
    });

    if (!response.ok) throw new Error("Erro ao iniciar execu√ß√£o cont√≠nua");
    return await response.json();
}

// =================================
// ‚õî POST - Parar execu√ß√£o cont√≠nua
// =================================
async function stopContinuousExecution() {
    const token = getToken();

    const response = await fetch(`${API_BASE_URL}/parar_continuo`, {
        method: "POST",
        headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json"
        }
    });

    if (!response.ok) throw new Error("Erro ao parar execu√ß√£o cont√≠nua");
    return await response.json();
}
